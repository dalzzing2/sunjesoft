DROP VIEW IF EXISTS PERFORMANCE_VIEW_SCHEMA.TECH_TRANSACTION;

CREATE VIEW PERFORMANCE_VIEW_SCHEMA.TECH_TRANSACTION
(
  MEMBER_NAME,
  USER_NAME,
  USER_ID,
  USER_SERIAL,
  CHARSET,
  PROGRAM,
  USER_LOGIN_TIME,
  TRANSACTION_ID,
  TRAN_BEGIN_TIME
)
AS
SELECT
  NVL(XT.CLUSTER_MEMBER_NAME, 'STANDALONE') MEMBER_NAME,
  AU.AUTHORIZATION_NAME USER_NAME,
  XS.ID USER_ID,
  XS.SERIAL USER_SERIAL,
  XS.CLIENT_CHARSET CHARSET,
  XS.PROGRAM PROGRAM,
  XS.LOGON_TIME USER_LOGIN_TIME,
  XT.LOGICAL_TRANS_ID TRANSACTION_ID,
  XT.BEGIN_TIME TRAN_BEGIN_TIME
FROM
  AUTHORIZATIONS AU,
  X$TRANSACTION XT,
  X$SESSION XS
WHERE
  1 = 1 AND
  NVL(AU.CLUSTER_MEMBER_NAME, 'STANDALONE') = NVL(XT.CLUSTER_MEMBER_NAME, 'STANDALONE') AND
  NVL(AU.CLUSTER_MEMBER_NAME, 'STANDALONE') = NVL(XS.CLUSTER_MEMBER_NAME, 'STANDALONE') AND
  NVL(XT.CLUSTER_MEMBER_NAME, 'STANDALONE') = NVL(XS.CLUSTER_MEMBER_NAME, 'STANDALONE') AND
  AU.AUTH_ID = XS.USER_ID AND
  XT.LOGICAL_TRANS_ID = XS.TRANS_ID AND
  XT.DRIVER_MEMBER_ID != -1 ;
  
GRANT SELECT ON TABLE PERFORMANCE_VIEW_SCHEMA.TECH_TRANSACTION TO PUBLIC;