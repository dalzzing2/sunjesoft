DROP VIEW IF EXISTS PERFORMANCE_VIEW_SCHEMA.TECH_SYSTEM_WAIT_EVENT;

CREATE VIEW PERFORMANCE_VIEW_SCHEMA.TECH_SYSTEM_WAIT_EVENT
(
  MEMBER_NAME,
  WAIT_ID,
  WAIT_NAME,
  WAIT_DESC,
  TOTAL_WAITS,
  TOTAL_TIMEOUTS,
  TIME_WAITED,
  AVERAGE_WAIT,
  --CLASS_ID,
  CLASS_NAME,
  CLASS_DESC
)
AS
SELECT
  NVL(XWECN.CLUSTER_MEMBER_NAME, 'STANDALONE') MEMBER_NAME,
  XWEN.WAIT_EVENT_ID WAIT_ID,
  XWEN.NAME WAIT_NAME,
  XWEN.DESCRIPTION WAIT_DESC,
  NVL(XSE.TOTAL_WAITS, 0) TOTAL_WAITS,
  NVL(XSE.TOTAL_TIMEOUTS, 0) TOTAL_TIMEOUTS,
  NVL(XSE.TIME_WAITED, 0) TIME_WAITED,
  NVL(XSE.AVERAGE_WAIT, 0) AVERAGE_WAIT,
  --XWECN.CLASS_ID CLASS_ID,
  XWECN.NAME CLASS_NAME,
  XWECN.DESCRIPTION CLASS_DESC
FROM
  X$WAIT_EVENT_CLASS_NAME XWECN,
  X$WAIT_EVENT_NAME XWEN
  LEFT OUTER JOIN
  ( SELECT
      NVL(XSE.CLUSTER_MEMBER_NAME, 'STANDALONE') MEMBER_NAME,
	  XSE.WAIT_EVENT_ID WAIT_EVENT_ID,
	  XSE.TOTAL_WAITS TOTAL_WAITS,
	  XSE.TOTAL_TIMEOUTS TOTAL_TIMEOUTS,
	  XSE.TIME_WAITED TIME_WAITED,
	  XSE.AVERAGE_WAIT AVERAGE_WAIT
	FROM
	  X$SYSTEM_EVENT XSE ) XSE
	ON
	  1 = 1 AND
	  XWEN.WAIT_EVENT_ID = XSE.WAIT_EVENT_ID AND
	  NVL(XWEN.CLUSTER_MEMBER_NAME, 'STANDALONE') = NVL(XSE.MEMBER_NAME, 'STANDALONE')
WHERE
  1 = 1 AND
  NVL(XWECN.CLUSTER_MEMBER_NAME, 'STANDALONE') = NVL(XWEN.CLUSTER_MEMBER_NAME, 'STANDALONE') AND
  XWEN.CLASS_ID = XWECN.CLASS_ID
ORDER BY MEMBER_NAME, WAIT_ID;

GRANT SELECT ON TABLE PERFORMANCE_VIEW_SCHEMA.TECH_SYSTEM_WAIT_EVENT TO PUBLIC;